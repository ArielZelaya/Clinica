/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package almaquerubina;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.beans.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author crist
 */
public class Pacientes extends javax.swing.JFrame {
public PacienteTableModel pacienteTModel = new PacienteTableModel();
boolean guardar = true;
Paciente p = new Paciente();
private Connection conexion;
    /**
     * Creates new form Pacientes
     */
    public Pacientes() {
       
        initComponents();
        inicializarColumnas();
        Pacientes.super.setTitle("LISTADO DE PACIENTES");
        Pacientes.super.setSize(800,700);
        this.setLocationRelativeTo(Pacientes.this);
         Image ico = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("iconos/diente1.png"));
   this.setIconImage(ico);
    conectar();
consultaInicial();
    }
    private void conectar() {
try {
conexion = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Clinica", "ZT12002",
"prn315ZT12002");
} catch (SQLException ex) {
Logger.getLogger(Pacientes.class.getName()).log(Level.SEVERE, null, ex);
}
}
    private void consultaInicial() {
try {
String sentenciaSql = "SELECT * FROM paciente";
    java.sql.Statement statement = this.conexion.createStatement();
ResultSet resultado = statement.executeQuery(sentenciaSql);
while (resultado.next()) {
Paciente paciente = new Paciente();
paciente.codigo = resultado.getString("codigo_paciente");
paciente.nombre = resultado.getString("nombre");
paciente.direccion = resultado.getString("direccion");
paciente.telefono2=resultado.getString("telefono_2");
paciente.telefono = resultado.getString("telefono");
this.pacienteTModel.pacientes.add(paciente);
}
pacientes.repaint();
} catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Error al recuperar los productos de la base de datos");
ex.printStackTrace();
}
}
    private void UpdateJTable() {
pacienteTModel.pacientes.clear();
try {
PreparedStatement statement = null;
String sentenciaSql = "SELECT * FROM paciente ";
statement = this.conexion.prepareStatement(sentenciaSql);
ResultSet resultado = statement.executeQuery();
while (resultado.next()) {
Paciente paciente = new Paciente();
paciente.codigo = resultado.getString("codigo_paciente");
paciente.nombre = resultado.getString("nombre");
paciente.direccion = resultado.getString("direccion");
paciente.telefono2=resultado.getString("telefono_2");
paciente.telefono = resultado.getString("telefono");
pacienteTModel.pacientes.add(paciente);
}
pacientes.repaint();
} catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Error al recuperar los pacientes de la base de datos");
ex.printStackTrace();
}
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pacientes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txttelefono = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txttelefono1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 500));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Listado de Pacientes");

        pacientes.setModel(pacienteTModel);
        pacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pacientes);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("Codigo");

        jLabel7.setText("Nombre");

        jLabel8.setText("Direccion");

        jLabel9.setText("Telefono");

        jLabel10.setText("Telefono 2");

        txttelefono1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttelefono1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(77, 77, 77)
                        .addComponent(txttelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(89, 89, 89)
                            .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txttelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/almaquerubina/icon/save1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/almaquerubina/icon/back.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Regresar");

        jLabel3.setText("Guardar");

        jButton3.setText("Borrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(26, 26, 26)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 625, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(32, 32, 32))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addGap(35, 35, 35)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cerrar();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try {
            
            if(guardar){//Guardar paciente nuevo
    
PreparedStatement statement = null;

String sentenciaSql = "INSERT INTO paciente " ;
    sentenciaSql+="VALUES (?,?,?,?,?)";

   //Para insertar datos dentro de la base se usa una preparedStatement no statement normal 

PreparedStatement preparedStatement = conexion.prepareStatement(sentenciaSql);
preparedStatement.setString(1,txtcodigo.getText() );
preparedStatement.setString(2, txtnombre.getText());
preparedStatement.setString(3,txtdireccion.getText());
preparedStatement.setString(4,txttelefono.getText());
preparedStatement.setString(5,txttelefono1.getText());
preparedStatement.execute();
UpdateJTable();
JOptionPane.showMessageDialog(rootPane, "paciente agregado exitosamente");


            }else{//Modificar paciente 
            PreparedStatement statement = null;

String sentenciaSql = "update paciente set codigo_paciente=?,nombre=?,direccion=?,telefono=?,telefono_2=? where codigo_paciente=?" ;
    

   //Para insertar datos dentro de la base se usa una preparedStatement no statement normal 

PreparedStatement preparedStatement = conexion.prepareStatement(sentenciaSql);
preparedStatement.setString(1,txtcodigo.getText() );
preparedStatement.setString(2, txtnombre.getText());
preparedStatement.setString(3,txtdireccion.getText());
preparedStatement.setString(4,txttelefono.getText());
preparedStatement.setString(5,txttelefono1.getText());
preparedStatement.setString(6,p.codigo);
preparedStatement.execute();
UpdateJTable();
JOptionPane.showMessageDialog(rootPane, "paciente modificado exitosamente");

guardar=true;
            }
}catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Borre las citas del paciente para luego modificar sus datos");
ex.printStackTrace();}
       pacientes.repaint();
       txtcodigo.setText("");
txtnombre.setText("");
txtdireccion.setText("");
txttelefono.setText("");
txttelefono1.setText("");
pacienteTModel.fireTableDataChanged();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txttelefono1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttelefono1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttelefono1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int column = 0;
int row = pacientes.getSelectedRow();
String indice = pacientes.getModel().getValueAt(row, column).toString();
        
        try{
            PreparedStatement statement = null;

String sentenciaSql = "delete from paciente " ;
    sentenciaSql+="where codigo_paciente = ?";
    
    PreparedStatement preparedStatement = conexion.prepareStatement(sentenciaSql);
    preparedStatement.setString(1, indice);
    
    preparedStatement.execute();
    JOptionPane.showMessageDialog(rootPane, "paciente eliminado exitosamente");
        } catch (SQLException ex) {
        Logger.getLogger(Pacientes.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(rootPane, "Para borrar el paciente primero borre sus citas");
    }
        consultaInicial();
            UpdateJTable();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        try {
            pacienteTModel.pacientes.clear();
          PreparedStatement statement = null;
String sentenciaSql = "SELECT * FROM paciente where codigo_paciente=";
sentenciaSql+= "?";
     statement = this.conexion.prepareStatement(sentenciaSql);
     statement.setString(1, txtcodigo.getText());
ResultSet resultado = statement.executeQuery();
while (resultado.next()) {
Paciente paciente = new Paciente();
paciente.codigo = resultado.getString("codigo_paciente");
paciente.nombre = resultado.getString("nombre");
paciente.direccion = resultado.getString("direccion");
paciente.telefono2=resultado.getString("telefono_2");
paciente.telefono = resultado.getString("telefono");
pacienteTModel.pacientes.add(paciente);
}
pacientes.repaint();
} catch (SQLException ex) {
JOptionPane.showMessageDialog(this, "Error al recuperar el paciente de la base de datos");
ex.printStackTrace();
}    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void pacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pacientesMouseClicked
        // TODO add your handling code here:
        int clics = evt.getClickCount();
int row = pacientes.rowAtPoint(evt.getPoint());
if (clics == 2) {
Paciente pA = pacienteTModel.pacientes.get(row);

p=pA;
txtcodigo.setText(p.codigo);
txtnombre.setText(p.nombre);
txtdireccion.setText(p.direccion);
txttelefono.setText(p.telefono);
txttelefono1.setText(p.telefono2);
guardar = false;
}
    }//GEN-LAST:event_pacientesMouseClicked

    /**
     * @param args the command line arguments
     */
    public void cerrar(){
    WindowEvent WinClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(WinClosingEvent);
}
    private void inicializarColumnas() {
TableColumnModel tColumnModel = new DefaultTableColumnModel();
for (int i = 0; i < 5; i++) {
TableColumn col = new TableColumn(i);
switch (i) {
case 0:
col.setHeaderValue("Código");
break;
case 1:
col.setHeaderValue("Nombre");
break;
case 2:
col.setHeaderValue("Direccion");
break;
case 3:
col.setHeaderValue("Telefono");
break;
case 4:
col.setHeaderValue("Telefono_2");
}
tColumnModel.addColumn(col);
}
pacientes.setColumnModel(tColumnModel);
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Pacientes p = new Pacientes();
       
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pacientes().setVisible(true);
            }
        });
    }
    
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pacientes;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    private javax.swing.JTextField txttelefono1;
    // End of variables declaration//GEN-END:variables
}
